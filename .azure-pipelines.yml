#--------------------------------------------------------------------------------------------------
# Windows
#--------------------------------------------------------------------------------------------------

jobs:
- job: win32_qt5
  pool:
    vmImage: "windows-latest"
  steps:
  - bash: |
      sh 3rdparty.sh win32
      sh configure.sh win32 sky
      cd ../Sky
      sh build.sh qt5 win32 tools
      cd ../s
      sh build.sh win32 deploy
      cd deploy
      7z a ../ALVR2.zip *
  - publish: $(System.DefaultWorkingDirectory)/ALVR2.zip
    artifact: ALVR2-win32-qt5

- job: win64_qt5
  pool:
    vmImage: "windows-latest"
  steps:
  - bash: |
      sh 3rdparty.sh win64
      sh configure.sh win64 sky
      cd ../Sky
      sh build.sh qt5 win64 tools
      cd ../s
      sh build.sh win64 deploy
      cd deploy
      7z a ../ALVR2.zip *
  - publish: $(System.DefaultWorkingDirectory)/ALVR2.zip
    artifact: ALVR2-win64-qt5

#--------------------------------------------------------------------------------------------------

- job: win32_msvc_qt5
  pool:
    vmImage: "windows-latest"
  steps:
  - bash: |
      sh 3rdparty.sh win32-msvc
      sh configure.sh win32-msvc sky
      cd ../Sky
      sh build.sh qt5 win32-msvc tools
      cd ../s
      sh build.sh win32-msvc deploy
      cd deploy
      7z a ../ALVR2.zip *
  - publish: $(System.DefaultWorkingDirectory)/ALVR2.zip
    artifact: ALVR2-win32-msvc-qt5

- job: win64_msvc_qt5
  pool:
    vmImage: "windows-latest"
  steps:
  - bash: |
      sh 3rdparty.sh win64-msvc
      sh configure.sh win64-msvc sky
      cd ../Sky
      sh build.sh qt5 win64-msvc tools
      cd ../s
      sh build.sh win64-msvc deploy
      cd deploy
      7z a ../ALVR2.zip *
  - publish: $(System.DefaultWorkingDirectory)/ALVR2.zip
    artifact: ALVR2-win64-msvc-qt5

#--------------------------------------------------------------------------------------------------
# macOS
#--------------------------------------------------------------------------------------------------

- job: macOS_qt5
  pool:
    vmImage: "macOS-latest"
  steps:
  - bash: |
      sh 3rdparty.sh macOS
      sh configure.sh macOS sky
      cd ../Sky
      sh build.sh qt5 macOS tools
      cd ../s
      sh build.sh macOS deploy
      cd deploy
      zip -rq ../ALVR2.zip *
  - publish: $(System.DefaultWorkingDirectory)/ALVR2.zip
    artifact: ALVR2-macOS-qt5

#--------------------------------------------------------------------------------------------------
# Linux
#--------------------------------------------------------------------------------------------------

- job: linux32_qt5
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      docker run -d --name ubuntu -v $PWD:/ALVR2 i386/ubuntu:18.04 tail -f /dev/null
      docker exec -t ubuntu bash -c "cd /ALVR2;
                                     apt-get update;
                                     apt-get -y install sudo curl zip git;
                                     sh 3rdparty.sh linux;
                                     sh configure.sh linux sky;
                                     cd ../Sky;
                                     sh build.sh qt5 linux tools;
                                     cd ../ALVR2;
                                     sh build.sh linux deploy;
                                     cd deploy;
                                     zip -rq ../ALVR2.zip *"
  - publish: $(System.DefaultWorkingDirectory)/ALVR2.zip
    artifact: ALVR2-linux32-qt5

#--------------------------------------------------------------------------------------------------

- job: linux64_qt5
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      docker run -d --name ubuntu -v $PWD:/ALVR2 amd64/ubuntu:18.04 tail -f /dev/null
      docker exec -t ubuntu bash -c "cd /ALVR2;
                                     apt-get update;
                                     apt-get -y install sudo curl zip git;
                                     sh 3rdparty.sh linux;
                                     sh configure.sh linux sky;
                                     cd ../Sky;
                                     sh build.sh qt5 linux tools;
                                     cd ../ALVR2;
                                     sh build.sh linux deploy;
                                     cd deploy;
                                     zip -rq ../ALVR2.zip *"
  - publish: $(System.DefaultWorkingDirectory)/ALVR2.zip
    artifact: HelloConsole-linux64-qt5
